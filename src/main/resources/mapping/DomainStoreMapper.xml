<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hust.scdx.dao.mapper.DomainStoreMapper">
  <resultMap id="BaseResultMap" type="com.hust.scdx.model.DomainStore">
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="column" jdbcType="VARCHAR" property="column" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="rank" jdbcType="VARCHAR" property="rank" />
    <result column="incidence" jdbcType="VARCHAR" property="incidence" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    url, name, domain_store.column, type, rank, incidence, create_time
  </sql>
  <select id="selectByExample" parameterType="com.hust.scdx.model.DomainStoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from domain_store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.hust.scdx.model.DomainStoreExample">
    delete from domain_store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hust.scdx.model.DomainStore">
    insert into domain_store (url, name, domain_store.column, 
      type, rank, incidence, 
      create_time)
    values (#{url,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{column,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{rank,jdbcType=VARCHAR}, #{incidence,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hust.scdx.model.DomainStore">
    insert into domain_store
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="url != null">
        url,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="column != null">
        domain_store.column,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="rank != null">
        rank,
      </if>
      <if test="incidence != null">
        incidence,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="column != null">
        #{column,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="rank != null">
        #{rank,jdbcType=VARCHAR},
      </if>
      <if test="incidence != null">
        #{incidence,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into domain_store (url, name, domain_store.column, 
      type, rank, incidence, 
      create_time)
    values 
    <foreach collection="list" item="item" index="index" separator=",">
    (
        #{item.url,jdbcType=VARCHAR},
        #{item.name,jdbcType=VARCHAR},
        #{item.column,jdbcType=VARCHAR},
        #{item.type,jdbcType=VARCHAR},
        #{item.rank,jdbcType=VARCHAR},
        #{item.incidence,jdbcType=VARCHAR},
        #{item.createTime,jdbcType=TIMESTAMP}
    )
    </foreach>
  </insert>
  <select id="countByExample" parameterType="com.hust.scdx.model.DomainStoreExample" resultType="java.lang.Long">
    select count(*) from domain_store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update domain_store
    <set>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.column != null">
        domain_store.column = #{record.column,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.rank != null">
        rank = #{record.rank,jdbcType=VARCHAR},
      </if>
      <if test="record.incidence != null">
        incidence = #{record.incidence,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update domain_store
    set url = #{record.url,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      domain_store.column = #{record.column,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      rank = #{record.rank,jdbcType=VARCHAR},
      incidence = #{record.incidence,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>