<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hust.scdx.dao.mapper.DomainOneMapper">
  <resultMap id="BaseResultMap" type="com.hust.scdx.model.DomainOne">
    <id column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="column" jdbcType="VARCHAR" property="column" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="rank" jdbcType="VARCHAR" property="rank" />
    <result column="incidence" jdbcType="VARCHAR" property="incidence" />
    <result column="weight" jdbcType="INTEGER" property="weight" />
    <result column="maintenance_status" jdbcType="BIT" property="maintenanceStatus" />
    <result column="is_father" jdbcType="BIT" property="isFather" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uuid, url, name, domain_one.column, type, rank, incidence, weight, maintenance_status, is_father, update_time
  </sql>
  <select id="selectByExample" parameterType="com.hust.scdx.model.DomainOneExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from domain_one
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
	<if test="start != 0 or limit != 0" >
    	limit #{start},#{limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from domain_one
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from domain_one
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hust.scdx.model.DomainOneExample">
    delete from domain_one
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hust.scdx.model.DomainOne">
    insert into domain_one (uuid, url, name, 
      domain_one.column, type, rank, 
      incidence, weight, maintenance_status, 
      is_father, update_time)
    values (#{uuid,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{column,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{rank,jdbcType=VARCHAR}, 
      #{incidence,jdbcType=VARCHAR}, #{weight,jdbcType=INTEGER}, #{maintenanceStatus,jdbcType=BIT}, 
      #{isFather,jdbcType=BIT}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    REPLACE into domain_one 
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="column != null">
        domain_one.column,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="rank != null">
        rank,
      </if>
      <if test="incidence != null">
        incidence,
      </if>
      <if test="weight != null">
        weight,
      </if>
	  <if test="maintenanceStatus != null">
        maintenance_status,
      </if>
      <if test="isFather != null">
        is_father,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    values 
    <foreach collection="list" item="item" index="index" separator=",">
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{item.uuid,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{item.url,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{item.name,jdbcType=VARCHAR},
      </if>
      <if test="column != null">
        #{item.column,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{item.type,jdbcType=VARCHAR},
      </if>
      <if test="rank != null">
        #{item.rank,jdbcType=VARCHAR},
      </if>
      <if test="incidence != null">
        #{item.incidence,jdbcType=VARCHAR},
      </if>
      <if test="weight != null">
        #{item.weight,jdbcType=INTEGER},
      </if>
	  <if test="maintenanceStatus != null">
        #{item.maintenanceStatus,jdbcType=BIT},
      </if>
      <if test="isFather != null">
        #{item.isFather,jdbcType=BIT},
      </if>
      <if test="updateTime != null">
        #{item.updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    </foreach>
  </insert>
  <insert id="insertIgnore" parameterType="java.util.List">
    insert ignore into domain_one 
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="column != null">
        domain_one.column,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="rank != null">
        rank,
      </if>
      <if test="incidence != null">
        incidence,
      </if>
      <if test="weight != null">
        weight,
      </if>
	  <if test="maintenanceStatus != null">
        maintenance_status,
      </if>
      <if test="isFather != null">
        is_father,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    values 
    <foreach collection="list" item="item" index="index" separator=",">
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{item.uuid,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{item.url,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{item.name,jdbcType=VARCHAR},
      </if>
      <if test="column != null">
        #{item.column,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{item.type,jdbcType=VARCHAR},
      </if>
      <if test="rank != null">
        #{item.rank,jdbcType=VARCHAR},
      </if>
      <if test="incidence != null">
        #{item.incidence,jdbcType=VARCHAR},
      </if>
      <if test="weight != null">
        #{item.weight,jdbcType=INTEGER},
      </if>
	  <if test="maintenanceStatus != null">
        #{item.maintenanceStatus,jdbcType=BIT},
      </if>
      <if test="isFather != null">
        #{item.isFather,jdbcType=BIT},
      </if>
      <if test="updateTime != null">
        #{item.updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.hust.scdx.model.DomainOne">
    insert into domain_one
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="column != null">
        domain_one.column,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="rank != null">
        rank,
      </if>
      <if test="incidence != null">
        incidence,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="maintenanceStatus != null">
        maintenance_status,
      </if>
      <if test="isFather != null">
        is_father,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="column != null">
        #{column,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="rank != null">
        #{rank,jdbcType=VARCHAR},
      </if>
      <if test="incidence != null">
        #{incidence,jdbcType=VARCHAR},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="maintenanceStatus != null">
        #{maintenanceStatus,jdbcType=BIT},
      </if>
      <if test="isFather != null">
        #{isFather,jdbcType=BIT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hust.scdx.model.DomainOneExample" resultType="java.lang.Long">
    select count(*) from domain_one
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update domain_one
    <set>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.column != null">
        domain_one.column = #{record.column,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.rank != null">
        rank = #{record.rank,jdbcType=VARCHAR},
      </if>
      <if test="record.incidence != null">
        incidence = #{record.incidence,jdbcType=VARCHAR},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=INTEGER},
      </if>
      <if test="record.maintenanceStatus != null">
        maintenance_status = #{record.maintenanceStatus,jdbcType=BIT},
      </if>
      <if test="record.isFather != null">
        is_father = #{record.isFather,jdbcType=BIT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update domain_one
    set uuid = #{record.uuid,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      domain_one.column = #{record.column,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      rank = #{record.rank,jdbcType=VARCHAR},
      incidence = #{record.incidence,jdbcType=VARCHAR},
      weight = #{record.weight,jdbcType=INTEGER},
      maintenance_status = #{record.maintenanceStatus,jdbcType=BIT},
      is_father = #{record.isFather,jdbcType=BIT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hust.scdx.model.DomainOne">
    update domain_one
    <set>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="column != null and column !='null'">
        domain_one.column = #{column,jdbcType=VARCHAR},
      </if>
      <if test="type != null and type !='null'">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="rank != null and rank !='null'">
        rank = #{rank,jdbcType=VARCHAR},
      </if>
      <if test="incidence != null">
        incidence = #{incidence,jdbcType=VARCHAR},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="maintenanceStatus != null">
        maintenance_status = #{maintenanceStatus,jdbcType=BIT},
      </if>
      <if test="isFather != null">
        is_father = #{isFather,jdbcType=BIT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hust.scdx.model.DomainOne">
    update domain_one
    set url = #{url,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      domain_one.column = #{column,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      rank = #{rank,jdbcType=VARCHAR},
      incidence = #{incidence,jdbcType=VARCHAR},
      weight = #{weight,jdbcType=INTEGER},
      maintenance_status = #{maintenanceStatus,jdbcType=BIT},
      is_father = #{isFather,jdbcType=BIT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>